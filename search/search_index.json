{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"oarfish: transcript quantification from long-read RNA-seq data","text":""},{"location":"#about-oarfish","title":"About <code>oarfish</code>","text":"<p><code>oarfish</code> is a program, written in <code>rust</code>, for quantifying transcript-level expression from long-read (i.e. Oxford nanopore cDNA and direct RNA and PacBio) sequencing technologies. <code>oarfish</code> requires a sample of sequencing reads aligned to the transcriptome (currntly not to the genome). It handles multi-mapping reads through the use of probabilistic allocation via an expectation-maximization (EM) algorithm.</p> <p>There are many methods and programs that exist for transcript discovery or identification of novel transcripts using long-read RNA sequencing data; <code>oarfish</code> does not tackle this problem. Rather, <code>oarfish</code> is focused entirely on accurate quantification of transcripts.  Of course, if you wish to add transcripts to the catalog to be quantified, you can perform discovery upstream of <code>oarfish</code>, and then quantify the newly-dicovered transcipts with <code>oarfish</code>.</p>"},{"location":"#details-about-oarfishs-method","title":"Details about <code>oarfish</code>'s method","text":"<p><code>oarfish</code> evaluates alignments of the sequencing reads against the transcriptome. For reads that align to multiple transcripts, <code>oarfish</code> attempts to resolve their allocation probabilistically using an iterative algorithm (expectation maximization \u2014 EM).</p> <p><code>oarfish</code> optionally employs many filters to help discard alignments that may reduce quantification accuracy.  Currently, the set of filters applied in <code>oarfish</code> are directly derived from the <code>NanoCount</code><sup>1</sup> tool; both the filters that exist, and the way their values are set (with the exception of the <code>--three-prime-clip</code> filter, which is not set by default in <code>oarfish</code> but is in <code>NanoCount</code>).</p> <p>Additionally, <code>oarfish</code> provides options to make use of coverage profiles derived from the aligned reads to improve quantification accuracy.  The use of this coverage model is enabled with the <code>--model-coverage</code> flag.  If this flag is passed, then <code>oarfish</code> will apply the coverage model to help further ascertain the origin of each read, which can lead to improved quantification accuracy.</p> <p>The usage can be provided by passing <code>-h</code> at the command line.</p> <pre><code>accurate transcript quantification from long-read RNA-seq data\n\nUsage: oarfish [OPTIONS] --alignments &lt;ALIGNMENTS&gt; --output &lt;OUTPUT&gt;\n\nOptions:\n      --quiet                    be quiet (i.e. don't output log messages that aren't at least warnings)\n      --verbose                  be verbose (i.e. output all non-developer logging messages)\n  -a, --alignments &lt;ALIGNMENTS&gt;  path to the file containing the input alignments\n  -o, --output &lt;OUTPUT&gt;          location where output quantification file should be written\n  -t, --threads &lt;THREADS&gt;        maximum number of cores that the oarfish can use to obtain binomial probability [default: 1]\n  -h, --help                     Print help\n  -V, --version                  Print version\n\nfilters:\n      --filter-group &lt;FILTER_GROUP&gt;\n          [possible values: no-filters, nanocount-filters]\n  -t, --three-prime-clip &lt;THREE_PRIME_CLIP&gt;\n          maximum allowable distance of the right-most end of an alignment from the 3' transcript end [default: 4294967295]\n  -f, --five-prime-clip &lt;FIVE_PRIME_CLIP&gt;\n          maximum allowable distance of the left-most end of an alignment from the 5' transcript end [default: 4294967295]\n  -s, --score-threshold &lt;SCORE_THRESHOLD&gt;\n          fraction of the best possible alignment score that a secondary alignment must have for consideration [default: 0.95]\n  -m, --min-aligned-fraction &lt;MIN_ALIGNED_FRACTION&gt;\n          fraction of a query that must be mapped within an alignemnt to consider the alignemnt valid [default: 0.5]\n  -l, --min-aligned-len &lt;MIN_ALIGNED_LEN&gt;\n          minimum number of nucleotides in the aligned portion of a read [default: 50]\n  -n, --allow-negative-strand\n          allow both forward-strand and reverse-complement alignments\n\ncoverage model:\n      --model-coverage  apply the coverage model\n  -b, --bins &lt;BINS&gt;     number of bins to use in coverage model [default: 10]\n\nEM:\n      --max-em-iter &lt;MAX_EM_ITER&gt;\n          maximum number of iterations for which to run the EM algorithm [default: 1000]\n      --convergence-thresh &lt;CONVERGENCE_THRESH&gt;\n          maximum number of iterations for which to run the EM algorithm [default: 0.001]\n  -q, --short-quant &lt;SHORT_QUANT&gt;\n          location of short read quantification (if provided)\n</code></pre> <p>You can set the various filters using the options listed above.  Alternatively, <code>oarfish</code> exposes a <code>--filter-group</code> option.  This filter-group option applies a collection of values to the filter options at once.  Currently, the available filter groups are <code>nanocount-filters</code> which seeks to match the filter parameters of <code>NanoCount</code> as closely as possible. It's worth noting that, like <code>NanoCount</code> these flags are primarily designed for direct RNA-seq data as negative-strand alignments (which may be expected in ONT cNDA sequencing) will be discarded.  Likewise the <code>no-filters</code> flag disables as many filters as possible, leaving it entirely up to the quantification algorithm to determine the best placement of each read, and having to account for each read even if all of the alignments are of rather poor quality.</p>"},{"location":"#input","title":"Input","text":"<p>The input should be a <code>bam</code> format file, with reads aligned using <code>minimap2</code> against the transcriptome. That is, <code>oarfish</code> does not currently handle spliced alignment to the genome.  Further, the output alignments should be name sorted (the default order produced by <code>minimap2</code> should be fine). Specifically, <code>oarfish</code> relies on the existence of the <code>AS</code> tag in the <code>bam</code> records that encodes the alignment score in order to obtain the score for each alignment (which is used in probabilistic read assignment), and the score of the best alignment, overall, for each read.</p> <p>Note: The actual characteristics required by <code>oarfish</code> are that the provided alignments align each read to the transcriptome, and report all alignments that should be considered for each read (i.e. multimappings are allowed). Likewise, the alignments for a given read should be adjacent in the input <code>bam</code> file, and each valid alignment should have an <code>AS</code> flag. If you'd like support for an alternative aligner that meets these requirements, please reach out (e.g. open a GitHub issue), and we'd be happy to consider adding support.</p>"},{"location":"#output","title":"Output","text":"<p>The <code>--output</code> option passed to <code>oarfish</code> corresponds to a path prefix (this prefix can contain the path separator character and if it refers to a directory that does not yeat exist, that directory will be created). Based on this path prefix, say <code>P</code>, <code>oarfish</code> will create 2 files:</p> <ul> <li><code>P.meta_info.json</code> - a JSON format file containing information about relevant parameters with which <code>oarfish</code> was run, and other relevant inforamtion from the processed sample apart from the actual transcript quantifications.</li> <li><code>P.quant</code> - a tab separated file listing the quantified targets, as well as information about their length and other metadata. The <code>num_reads</code> column provides the estimate of the number of reads originating from each target.</li> </ul>"},{"location":"#references","title":"References","text":"<ol> <li> <p>Josie Gleeson, Adrien Leger, Yair D J Prawer, Tracy A Lane, Paul J Harrison, Wilfried Haerty, Michael B Clark, Accurate expression quantification from nanopore direct RNA sequencing with NanoCount, Nucleic Acids Research, Volume 50, Issue 4, 28 February 2022, Page e19, https://doi.org/10.1093/nar/gkab1129 \u21a9</p> </li> </ol>"}]}